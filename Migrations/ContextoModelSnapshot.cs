// <auto-generated />
using System;
using Aplicada2ProyectoFinal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aplicada2ProyectoFinal.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Articulos", b =>
                {
                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmpeñosDetalleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Inventario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArticuloId");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticulosArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticulosArticuloId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.HasIndex("ArticulosArticuloId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoClienteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Cobros", b =>
                {
                    b.Property<int>("CobroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Abono")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpeñoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("CobroId");

                    b.ToTable("Cobros");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.CobrosDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Abono")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CobroId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CobrosCobroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpeñoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaEmpeño")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UltimaFechadeVigencia")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CobroId");

                    b.ToTable("CobrosDetalles");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Empeños", b =>
                {
                    b.Property<int>("EmpeñoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Abono")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombredeCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UltimaFechadeVigencia")
                        .HasColumnType("TEXT");

                    b.HasKey("EmpeñoId");

                    b.ToTable("Empeños");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.EmpeñosDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Articulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpeñoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpeñoId");

                    b.ToTable("EmpeñosDetalles");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.TiposClientes", b =>
                {
                    b.Property<int>("TipoClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TipoClienteId");

                    b.HasIndex("ClientesClienteId");

                    b.ToTable("TiposClientes");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.TiposUsuarios", b =>
                {
                    b.Property<int>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TipoUsuarioId");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepeatContraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Articulos", b =>
                {
                    b.HasOne("Aplicada2ProyectoFinal.Models.EmpeñosDetalle", null)
                        .WithMany("Articulos")
                        .HasForeignKey("EmpeñosDetalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Categorias", b =>
                {
                    b.HasOne("Aplicada2ProyectoFinal.Models.Articulos", null)
                        .WithMany("ListadoCategorias")
                        .HasForeignKey("ArticulosArticuloId1");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.CobrosDetalle", b =>
                {
                    b.HasOne("Aplicada2ProyectoFinal.Models.Cobros", null)
                        .WithMany("Detalle")
                        .HasForeignKey("CobrosCobroId");
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.Empeños", b =>
                {
                    b.HasOne("Aplicada2ProyectoFinal.Models.CobrosDetalle", null)
                        .WithMany("Empeños")
                        .HasForeignKey("EmpeñoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.EmpeñosDetalle", b =>
                {
                    b.HasOne("Aplicada2ProyectoFinal.Models.Empeños", null)
                        .WithMany("Detalle")
                        .HasForeignKey("EmpeñoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aplicada2ProyectoFinal.Models.TiposClientes", b =>
                {
                    b.HasOne("Aplicada2ProyectoFinal.Models.Clientes", null)
                        .WithMany("TiposClientes")
                        .HasForeignKey("ClientesClienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
