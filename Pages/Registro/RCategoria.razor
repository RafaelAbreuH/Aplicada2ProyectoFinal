@page "/Registro/Categoria"
@page "/Registro/Categoria/{CategoriaId:int}"
@inject IMatToaster  Toaster

    <style>
        .demo-mat-card {
            max-width: 500px;
            margin-top: 2rem;
            margin-left: auto;
            margin-right: auto
        }
    </style>


    <MatCard Class="mat-elevation-z8 demo-mat-card mat-layout-grid">
        <MatHeadline6 Class="demo-mat-card-clean-margin mat-layout-grid-cell mat-layout-grid-cell-align-middle">
            Categoria
        </MatHeadline6>
        <MatDivider Padded="true"></MatDivider>

        <div class="form-register">
            <EditForm Model="@Categoria" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <label class="text-muted form-text">@Mensaje</label>


                <div class="input-group-append">
                    <MatTextField Label="CategoriaId" Required="true" @bind-Value="Categoria.CategoriaId" Style="height: 37px; margin-left:5px;"></MatTextField>
                    <ValidationMessage For="(() => Categoria.CategoriaId)" />
                    <MatThemeProvider Theme="buscar">  <MatButton Raised="true" Icon="search" @onclick="Buscar" Style=" width: 7rem;"> Buscar</MatButton> </MatThemeProvider>
                </div>
                <br />

                <div class="form-group">
                    <MatTextField Label="Nombre" Required="true" @bind-Value="Categoria.Nombre" Style="height:37px; max-width:400px;  width:100%  !important;"></MatTextField>
                    <ValidationMessage For="(() => Categoria.Nombre)" />
                </div>



                <div>

                    <MatButton Raised="true" Icon="insert_drive_file" @onclick="Limpiar">Nuevo</MatButton>
                    <MatThemeProvider Theme="guarda">  <MatButton Raised="true" Type="submit" Icon="save">Guardar</MatButton>   </MatThemeProvider>
                    <MatThemeProvider Theme="eliminar"> <MatButton Raised="true" Icon="delete" @onclick="Eliminar">Eliminar</MatButton> </MatThemeProvider>

                </div>
            </EditForm>
        </div>
    </MatCard>

    @code {
        [Parameter]
        public int CategoriaId { get; set; }
        public Categorias Categoria { get; set; }
        string Mensaje = string.Empty;
        string Titulo = string.Empty;
        CategoriasController controller = new CategoriasController();

        protected override void OnInitialized()
        {
            Limpiar();
            if (CategoriaId != 0)
            {
                Categoria.CategoriaId = CategoriaId;
                Buscar();
            }
        }

        private void Limpiar()
        {
            Categoria = new Categorias();
            LimpiarMensajes();
        }

        public void LimpiarMensajes()
        {
            Mensaje = string.Empty;
            Titulo = string.Empty;
        }

        public void Guardar()
        {
            if (controller.Guardar(Categoria))
            {
                Limpiar();
                Mensaje = "Se Guardo la categoria correctamente";
                Titulo = "Éxito";
                Show(MatToastType.Success);
                LimpiarMensajes();
            }
            else
            {
                Limpiar();
                Mensaje = "Ha ocurrido un error al guardar la categoria";
                Titulo = "Falló";
                Show(MatToastType.Danger);
                LimpiarMensajes();
            }
        }

        public void Buscar()
        {
            Categorias categoria = controller.Buscar(Categoria.CategoriaId);

            if (categoria != null)
            {
                Limpiar();
                Categoria = categoria;
                Mensaje = "Se ha encontrado la categoria correctamente";
                Titulo = "Éxito";
                Show(MatToastType.Success);
                LimpiarMensajes();
            }
            else
            {
                Limpiar();
                Mensaje = "No se ha encontrado la categoria";
                Titulo = "Falló";
                Show(MatToastType.Danger);
                LimpiarMensajes();
            }
        }

        public void Eliminar()
        {
            Categorias categoria = controller.Buscar(Categoria.CategoriaId);

            if (categoria != null)
            {
                controller.Eliminar(Categoria.CategoriaId);
                Limpiar();
                Mensaje = "Se Elimino la categoria correctamente";
                Titulo = "Éxito";
                Show(MatToastType.Success);
                LimpiarMensajes();
            }
            else
            {
                Limpiar();
                Mensaje = "Ha ocurrido un error al eliminar la categoria";
                Titulo = "Falló";
                Show(MatToastType.Danger);
                LimpiarMensajes();
            }
        }
        public void Show(MatToastType type, string icon = "")
        {
            Toaster.Add(Mensaje, type, Titulo, icon, config =>
            {
                config.ShowCloseButton = true;
                config.ShowProgressBar = true;
                config.MaximumOpacity = Convert.ToInt32("100");
                config.ShowTransitionDuration = Convert.ToInt32("500");
                config.VisibleStateDuration = Convert.ToInt32("5000");
                config.HideTransitionDuration = Convert.ToInt32("500");
            });
        }

        MatTheme guarda = new MatTheme() { Primary = "green" };
        MatTheme eliminar = new MatTheme(){ Primary = "red" };
        MatTheme buscar = new MatTheme() { Primary = "grey" };
    }
