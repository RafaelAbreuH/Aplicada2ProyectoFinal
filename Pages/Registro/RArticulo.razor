@page "/Registro/Articulo"
@page "/Registro/Articulo/{ArticuloId:int}"
@inject IToastService toastService

<style>
    .demo-mat-card {
        max-width: 550px;
        margin-top: 2rem;
        margin-left: auto;
        margin-right: auto
    }
    .mdc-text-field{
        width:100%;
    }
</style>


    <MatCard Class="mat-elevation-z8 demo-mat-card mat-layout-grid">
        <MatHeadline6 Class="demo-mat-card-clean-margin mat-layout-grid-cell mat-layout-grid-cell-align-middle">
            Articulos
        </MatHeadline6>
        <MatDivider Padded="true"></MatDivider>
        <div class="form-register">

            <EditForm Model="@Articulo" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <label class="text-muted form-text">@Mensaje</label>

                <div class="form-row">
                    <div class="input-group-append">

                        <MatTextField Label="ArticuloId" @bind-Value="Articulo.ArticuloId" Required="true" InputStyle="number" Style="height: 37px; padding: 1px;"></MatTextField>
                        <ValidationMessage For="(() => Articulo.ArticuloId)" />
                        <MatThemeProvider Theme="buscar">  <MatButton Raised="true" Icon="search" @onclick="Buscar" Style=" max-width: 7rem;"> Buscar</MatButton> </MatThemeProvider>
                    </div>

                    &nbsp;
                    <MatDatePicker @bind-Value="Articulo.Fecha" Required="true" Label="Fecha" Style="height:37px; max-width: 10rem; "></MatDatePicker>
                    <ValidationMessage For="(() => Articulo.Fecha)" />
                </div>
                <br />

                <div class="form-group">
            <InputSelect @bind-Value="@CategoriaSeleccionado"  class="form-control " @onchange="SeleccionarCategoria" @onclick="SeleccionarCategoria">
                <option value="0" disabled selected>Seleccione una Categoria</option>
                @if (ListadoCategorias.Count <= 0)
                {
                    <option value="" disabled>No Hay Categoria Registrada</option>
                }
                else
                    @foreach (var item in ListadoCategorias)
                    {
                        <option value="@item.CategoriaId">@item.Nombre</option>
                    }
            </InputSelect>
            <ValidationMessage For="@(()=>Articulo.CategoriaId)" />
                 </div>

                <div class="form-group">
                    <MatTextField Required="true" Label="Nombre" @bind-Value="Articulo.Nombre" Style="height:37px; width:100%  !important;"></MatTextField>
                    <ValidationMessage For="(() => Articulo.Nombre)" />
                </div>

                <div class="form-group">
                    <MatTextField Label="Inventario" ReadOnly="true" @bind-Value="Articulo.Inventario" FullWidth="true" Style="height:37px;  width:100%  !important; background-color:InactiveBorder;"></MatTextField>
                </div>



                <div>

                    <MatButton Raised="true" Icon="insert_drive_file" @onclick="Limpiar">Nuevo</MatButton>
                    <MatThemeProvider Theme="guarda">  <MatButton Raised="true" Type="submit" Icon="save">Guardar</MatButton>   </MatThemeProvider>
                    <MatThemeProvider Theme="eliminar"> <MatButton Raised="true" Icon="delete" @onclick="Eliminar">Eliminar</MatButton> </MatThemeProvider>

                </div>
                <h5 class="text-success">@Mensaje</h5>

            </EditForm>
        </div>

    </MatCard>


    @code {
        [Parameter]
        public int ArticuloId { get; set; }
        public Articulos Articulo { get; set; }
        public Categorias Categoria { get; set; }
        string Mensaje = string.Empty;
        ArticulosController articulosController = new ArticulosController();
        CategoriasController categoriasController = new CategoriasController();
        private List<Categorias> ListadoCategorias { get; set; }
        string CategoriaSeleccionado = "0";

        protected override void OnInitialized()
        {
            Articulo = new Articulos();
            ListadoCategorias = categoriasController.GetList(e => true);
            Limpiar();
            if (ArticuloId != 0)
            {
                Articulo = articulosController.Buscar(ArticuloId);
            }
        }

        private void Limpiar()
        {
            Articulo = new Articulos();
            LimpiarMensajes();
        }

        public void LimpiarMensajes()
        {
            Mensaje = string.Empty;
        }

        public void Guardar()
        {
            if (articulosController.Guardar(Articulo))
            {
                Limpiar();
                toastService.ShowSuccess("Articulo guardado correctamente", "Exito");
            }
            else
            {
                Limpiar();
                toastService.ShowError("Error al guardar el articulo", "Fallo");
            }
        }

        public void Buscar()
        {
            var articulo = articulosController.Buscar(Articulo.ArticuloId);

            if (articulo != null)
            {
                Limpiar();
                Articulo = articulo;
                toastService.ShowSuccess("Articulo encontrado.", "Exito");
            }
            else
            {
                Limpiar();
                toastService.ShowError("El articulo no fue encontrad.o", "Fallo");
            }
        }

        public void Eliminar()
        {
            var articulo = articulosController.Buscar(Articulo.ArticuloId);

            if (articulo != null)
            {
                articulosController.Eliminar(Articulo.ArticuloId);
                Limpiar();
                toastService.ShowSuccess("Articulo eliminado correctamente.", "Exito");
            }
            else
            {
                Limpiar();
                toastService.ShowError("Error al eliminar el articulo.", "Fallo");
            }
        }
        private void SeleccionarCategoria()
        {
            Articulo.CategoriaId = Convert.ToInt32(CategoriaSeleccionado);
        }

        MatTheme guarda = new MatTheme()
        {
            Primary = "green",
        };

        MatTheme eliminar = new MatTheme()
        {
            Primary = "red",
        };

        MatTheme buscar = new MatTheme()
        {
            Primary = "grey",
        };

    }

